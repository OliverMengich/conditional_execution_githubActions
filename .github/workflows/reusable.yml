# to make a workflow reusable, it must be callable by other workflows
name: Reusable Deploy
on: 
  workflow_call:
    inputs: #passing in the artifacts name o help us download it. Incase the name changes dynamically
      artifact-name: #developer sets this
        description: Name of deployable artifacts hashFiles
        required: true #if required if false, woorkflow can run without it being passed. If true, workflow cannot run without it
        default: dist #this value will be used incase the input is not specified
        type: string # specify argument to expect
    secrets: #secrets don't have default value
      some-secret:
        required: true
    outputs: #if your workflows emits outputs that should be used e.g in deployment or anythin
      result:
        description: the result of deployment operation
        value:  ${{ jobs.deploy.outputs.outcome }}
jobs:
  deploy:
    outputs:
      outcome: ${{ steps.set-result.outputs.step-result}}
    runs-on: ubuntu-latest
    steps:
      # Adding inputs to reusable workflows
      - name: Get code
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
      - name: List files
        run: ls
      - name: Output Information
        run: echo "Deploying & Uploading....."
      - name: Set result output
        id: set-result
        run: echo "::set-output name=step-result::success"